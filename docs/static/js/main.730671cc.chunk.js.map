{"version":3,"sources":["services/api.js","components/FilterByName.js","components/CharacterCard.js","components/CharacterList.js","services/local-storage.js","components/App.js","index.js"],"names":["getApiData","fetch","then","response","json","data","results","map","character","name","id","image","species","status","origin","episodes","episode","length","FilterByName","props","htmlFor","type","onChange","handleFilter","CharacterCard","src","eachChar","alt","title","CharacterList","charElement","chars","objExportLS","get","key","defaultData","localStorage","getItem","JSON","parse","set","value","setItem","stringify","App","charsLocalStorageData","ls","useState","setChars","filterName","setFilterName","useEffect","charsData","filteredChars","filter","char","toLowerCase","includes","ev","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yJAoBeA,EApBI,WACjB,OAAOC,MAAM,yDACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAaL,OAZkBA,EAAKC,QAAQC,KAAI,SAACC,GAClC,MAAO,CACLC,KAAMD,EAAUC,KAChBC,GAAIF,EAAUE,GACdC,MAAOH,EAAUG,MACjBC,QAASJ,EAAUI,QACnBC,OAAQL,EAAUK,OAClBC,OAAQN,EAAUM,OAAOL,KACzBM,SAAUP,EAAUQ,QAAQC,e,OCHvBC,EATM,SAACC,GACpB,OACE,qCACE,uBAAOC,QAAQ,OAAf,qBACA,uBAAOC,KAAK,OAAOZ,KAAK,OAAOC,GAAG,OAAOY,SAAUH,EAAMI,mBCShDC,EAbO,SAACL,GACrB,OACE,oCACE,qBACEM,IAAKN,EAAMO,SAASf,MACpBgB,IAAKR,EAAMO,SAASjB,KACpBmB,MAAOT,EAAMO,SAASjB,OAExB,6BAAKU,EAAMO,SAASjB,OACpB,4BAAIU,EAAMO,SAASd,cCIViB,EAXO,SAACV,GACrB,IAAMW,EAAcX,EAAMY,MAAMxB,KAAI,SAACmB,GACnC,OAAO,cAAC,EAAD,CAAeA,SAAUA,OAGlC,OACE,kCACE,6BAAKI,OCQIE,EAJK,CAClBC,IAdU,SAACC,EAAKC,GAChB,IAAM9B,EAAO+B,aAAaC,QAAQH,GAClC,OAAa,OAAT7B,EACK8B,EAEAG,KAAKC,MAAMlC,IAUpBmC,IANU,SAACN,EAAKO,GAChBL,aAAaM,QAAQR,EAAKI,KAAKK,UAAUF,MCkC5BG,MAtCf,WACE,IAAMC,EAAwBC,EAAGb,IAAI,QAAS,IAC9C,EAA0Bc,mBAASF,GAAnC,mBAAOd,EAAP,KAAciB,EAAd,KACA,EAAoCD,mBAASD,EAAGb,IAAI,aAAc,KAAlE,mBAAOgB,EAAP,KAAmBC,EAAnB,KAIAC,qBAAU,WACa,IAAjBpB,EAAMd,QACRjB,IAAaE,MAAK,SAACkD,GACjBJ,EAASI,QAGZ,IAEHD,qBAAU,WACRL,EAAGN,IAAI,QAAST,KACf,CAACA,IAIJ,IAKMsB,EAAgBtB,EAAMuB,QAAO,SAACC,GAClC,OAAOA,EAAK9C,KAAK+C,cAAcC,SAASR,MAG1C,OACE,qCACE,gDACA,cAAC,EAAD,CAAc1B,aAZG,SAACmC,GACpBR,EAAcQ,EAAGC,OAAOlB,UAYtB,cAAC,EAAD,CAAeV,MAAOsB,QCpC5BO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.730671cc.chunk.js","sourcesContent":["const getApiData = () => {\r\n  return fetch(\"https://rickandmortyapi.com/api/character/?results=20\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const cleanData = data.results.map((character) => {\r\n        return {\r\n          name: character.name,\r\n          id: character.id,\r\n          image: character.image,\r\n          species: character.species,\r\n          status: character.status,\r\n          origin: character.origin.name,\r\n          episodes: character.episode.length,\r\n        };\r\n      });\r\n\r\n      return cleanData;\r\n    });\r\n};\r\n\r\nexport default getApiData;\r\n","const FilterByName = (props) => {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"name\">Search:</label>\r\n      <input type=\"text\" name=\"name\" id=\"name\" onChange={props.handleFilter} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","const CharacterCard = (props) => {\r\n  return (\r\n    <article>\r\n      <img\r\n        src={props.eachChar.image}\r\n        alt={props.eachChar.name}\r\n        title={props.eachChar.name}\r\n      />\r\n      <h4>{props.eachChar.name}</h4>\r\n      <p>{props.eachChar.species}</p>\r\n    </article>\r\n  );\r\n};\r\nexport default CharacterCard;\r\n","import CharacterCard from \"./CharacterCard\";\r\n\r\nconst CharacterList = (props) => {\r\n  const charElement = props.chars.map((eachChar) => {\r\n    return <CharacterCard eachChar={eachChar} />;\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <ul>{charElement}</ul>\r\n    </section>\r\n  );\r\n};\r\nexport default CharacterList;\r\n","const get = (key, defaultData) => {\r\n  const data = localStorage.getItem(key);\r\n  if (data === null) {\r\n    return defaultData;\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst objExportLS = {\r\n  get: get,\r\n  set: set,\r\n};\r\nexport default objExportLS;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport getApiData from \"../services/api\";\r\nimport FilterByName from \"./FilterByName\";\r\nimport CharacterList from \"./CharacterList\";\r\nimport ls from \"../services/local-storage\";\r\n\r\nfunction App() {\r\n  const charsLocalStorageData = ls.get(\"chars\", []);\r\n  const [chars, setChars] = useState(charsLocalStorageData);\r\n  const [filterName, setFilterName] = useState(ls.get(\"filterName\", \"\"));\r\n\r\n  //useStates\r\n\r\n  useEffect(() => {\r\n    if (chars.length === 0) {\r\n      getApiData().then((charsData) => {\r\n        setChars(charsData);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    ls.set(\"chars\", chars);\r\n  }, [chars]);\r\n\r\n  //handlers\r\n\r\n  const handleFilter = (ev) => {\r\n    setFilterName(ev.target.value);\r\n  };\r\n\r\n  //render\r\n  const filteredChars = chars.filter((char) => {\r\n    return char.name.toLowerCase().includes(filterName);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h1>Rick and Morty</h1>\r\n      <FilterByName handleFilter={handleFilter} />\r\n      <CharacterList chars={filteredChars} />\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}