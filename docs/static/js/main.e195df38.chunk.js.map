{"version":3,"sources":["services/api.js","components/FilterByName.js","components/CharacterCard.js","components/CharacterList.js","services/local-storage.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["getApiData","fetch","then","response","json","data","results","map","character","name","id","image","species","status","origin","episodes","episode","length","FilterByName","props","htmlFor","type","onChange","handleFilter","CharacterCard","to","eachChar","src","alt","title","CharacterList","charElement","chars","objExportLS","get","key","defaultData","localStorage","getItem","JSON","parse","set","value","setItem","stringify","CharacterDetail","char","App","charsLocalStorageData","ls","useState","setChars","filterName","setFilterName","console","log","useEffect","charsData","filteredChars","filter","toLowerCase","includes","exact","path","ev","target","render","routeCharId","match","params","foundChar","find","element","Number","ReactDOM","document","getElementById"],"mappings":"kJAoBeA,EApBI,WACjB,OAAOC,MAAM,yDACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAaL,OAZkBA,EAAKC,QAAQC,KAAI,SAACC,GAClC,MAAO,CACLC,KAAMD,EAAUC,KAChBC,GAAIF,EAAUE,GACdC,MAAOH,EAAUG,MACjBC,QAASJ,EAAUI,QACnBC,OAAQL,EAAUK,OAClBC,OAAQN,EAAUM,OAAOL,KACzBM,SAAUP,EAAUQ,QAAQC,e,OCHvBC,EATM,SAACC,GACpB,OACE,iCACE,uBAAOC,QAAQ,OAAf,qBACA,uBAAOC,KAAK,OAAOZ,KAAK,OAAOC,GAAG,OAAOY,SAAUH,EAAMI,mB,OCahDC,EAfO,SAACL,GACrB,OACE,cAAC,IAAD,CAAMM,GAAE,qBAAgBN,EAAMO,SAAShB,IAAvC,SACE,oCACE,qBACEiB,IAAKR,EAAMO,SAASf,MACpBiB,IAAKT,EAAMO,SAASjB,KACpBoB,MAAOV,EAAMO,SAASjB,OAExB,6BAAKU,EAAMO,SAASjB,OACpB,4BAAIU,EAAMO,SAASd,gBCKZkB,EAfO,SAACX,GACrB,IAAMY,EAAcZ,EAAMa,MAAMzB,KAAI,SAACmB,GACnC,OACE,6BACE,cAAC,EAAD,CAAeA,SAAUA,KADlBA,EAAShB,OAMtB,OACE,kCACE,6BAAKqB,OCIIE,EAJK,CAClBC,IAdU,SAACC,EAAKC,GAChB,IAAM/B,EAAOgC,aAAaC,QAAQH,GAClC,OAAa,OAAT9B,EACK+B,EAEAG,KAAKC,MAAMnC,IAUpBoC,IANU,SAACN,EAAKO,GAChBL,aAAaM,QAAQR,EAAKI,KAAKK,UAAUF,M,OCM5BG,EAdS,SAAC1B,GACvB,OACE,qCACE,qBAAKQ,IAAKR,EAAM2B,KAAKnC,QACrB,6BAAKQ,EAAM2B,KAAKrC,OAChB,yCAAYU,EAAM2B,KAAKjC,UACvB,0CAAaM,EAAM2B,KAAKlC,WACxB,yCAAYO,EAAM2B,KAAKhC,UACvB,2CAAcK,EAAM2B,KAAK/B,YAEzB,cAAC,IAAD,CAAMU,GAAG,IAAT,yBCgDSsB,MApDf,WACE,IAAMC,EAAwBC,EAAGf,IAAI,QAAS,IAC9C,EAA0BgB,mBAASF,GAAnC,mBAAOhB,EAAP,KAAcmB,EAAd,KACA,EAAoCD,mBAASD,EAAGf,IAAI,aAAc,KAAlE,mBAAOkB,EAAP,KAAmBC,EAAnB,KAEAC,QAAQC,IAAIvB,GAEZwB,qBAAU,WACa,IAAjBxB,EAAMf,QACRjB,IAAaE,MAAK,SAACuD,GACjBN,EAASM,QAGZ,IAEHD,qBAAU,WACRP,EAAGR,IAAI,QAAST,KACf,CAACA,IAIJ,IAKM0B,EAAgB1B,EAAM2B,QAAO,SAACb,GAClC,OAAOA,EAAKrC,KAAKmD,cAAcC,SAAST,MAU1C,OACE,qCACE,gDACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAlB,SACE,gCACE,cAAC,EAAD,CAAcxC,aAtBH,SAACyC,GACpBX,EAAcW,EAAGC,OAAOvB,UAsBhB,cAAC,EAAD,CAAeV,MAAO0B,SAG1B,cAAC,IAAD,CAAOK,KAAK,iBAAiBG,OAjBV,SAAC/C,GACxB,IAAMgD,EAAchD,EAAMiD,MAAMC,OAAO3D,GACnC4D,EAAYtC,EAAMuC,MAAK,SAACC,GAAD,OAAaA,EAAQ9D,KAAO+D,OAAON,MAE9D,OAAO,cAAC,EAAD,CAAiBrB,KAAMwB,cCrClCI,IAASR,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFS,SAASC,eAAe,W","file":"static/js/main.e195df38.chunk.js","sourcesContent":["const getApiData = () => {\r\n  return fetch(\"https://rickandmortyapi.com/api/character/?results=20\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const cleanData = data.results.map((character) => {\r\n        return {\r\n          name: character.name,\r\n          id: character.id,\r\n          image: character.image,\r\n          species: character.species,\r\n          status: character.status,\r\n          origin: character.origin.name,\r\n          episodes: character.episode.length,\r\n        };\r\n      });\r\n\r\n      return cleanData;\r\n    });\r\n};\r\n\r\nexport default getApiData;\r\n","const FilterByName = (props) => {\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"name\">Search:</label>\r\n      <input type=\"text\" name=\"name\" id=\"name\" onChange={props.handleFilter} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <Link to={`/character/${props.eachChar.id}`}>\r\n      <article>\r\n        <img\r\n          src={props.eachChar.image}\r\n          alt={props.eachChar.name}\r\n          title={props.eachChar.name}\r\n        />\r\n        <h4>{props.eachChar.name}</h4>\r\n        <p>{props.eachChar.species}</p>\r\n      </article>\r\n    </Link>\r\n  );\r\n};\r\nexport default CharacterCard;\r\n","import CharacterCard from \"./CharacterCard\";\r\n\r\nconst CharacterList = (props) => {\r\n  const charElement = props.chars.map((eachChar) => {\r\n    return (\r\n      <li key={eachChar.id}>\r\n        <CharacterCard eachChar={eachChar} />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <ul>{charElement}</ul>\r\n    </section>\r\n  );\r\n};\r\nexport default CharacterList;\r\n","const get = (key, defaultData) => {\r\n  const data = localStorage.getItem(key);\r\n  if (data === null) {\r\n    return defaultData;\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst objExportLS = {\r\n  get: get,\r\n  set: set,\r\n};\r\nexport default objExportLS;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  return (\r\n    <>\r\n      <img src={props.char.image} />\r\n      <h2>{props.char.name}</h2>\r\n      <p>Status: {props.char.status}</p>\r\n      <p>Species: {props.char.species}</p>\r\n      <p>Origin: {props.char.origin}</p>\r\n      <p>Episodes: {props.char.episodes}</p>\r\n\r\n      <Link to=\"/\">Go back</Link>\r\n    </>\r\n  );\r\n};\r\nexport default CharacterDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport getApiData from \"../services/api\";\r\nimport FilterByName from \"./FilterByName\";\r\nimport CharacterList from \"./CharacterList\";\r\nimport ls from \"../services/local-storage\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport CharacterDetail from \"./CharacterDetail\";\r\n\r\nfunction App() {\r\n  const charsLocalStorageData = ls.get(\"chars\", []);\r\n  const [chars, setChars] = useState(charsLocalStorageData);\r\n  const [filterName, setFilterName] = useState(ls.get(\"filterName\", \"\"));\r\n  //useStates\r\n  console.log(chars);\r\n\r\n  useEffect(() => {\r\n    if (chars.length === 0) {\r\n      getApiData().then((charsData) => {\r\n        setChars(charsData);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    ls.set(\"chars\", chars);\r\n  }, [chars]);\r\n\r\n  //handlers\r\n\r\n  const handleFilter = (ev) => {\r\n    setFilterName(ev.target.value);\r\n  };\r\n\r\n  //render\r\n  const filteredChars = chars.filter((char) => {\r\n    return char.name.toLowerCase().includes(filterName);\r\n  });\r\n\r\n  const renderCharDetail = (props) => {\r\n    const routeCharId = props.match.params.id;\r\n    let foundChar = chars.find((element) => element.id === Number(routeCharId));\r\n\r\n    return <CharacterDetail char={foundChar} />;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Rick and Morty</h1>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <div>\r\n            <FilterByName handleFilter={handleFilter} />\r\n            <CharacterList chars={filteredChars} />\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/character/:id\" render={renderCharDetail} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}